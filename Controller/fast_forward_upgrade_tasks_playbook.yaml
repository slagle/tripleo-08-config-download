- hosts: Controller
  name: Controller playbook
  tasks:
  - changed_when:
    - step|int == 1
    - release == 'ocata'
    - remove_ceilometer_expirer_crontab.stderr != "no crontab for ceilometer"
    failed_when:
    - step|int == 1
    - release == 'ocata'
    - remove_ceilometer_expirer_crontab.rc != 0
    - remove_ceilometer_expirer_crontab.stderr != "no crontab for ceilometer"
    name: Remove ceilometer expirer cron tab on upgrade
    register: remove_ceilometer_expirer_crontab
    shell: /usr/bin/crontab -u ceilometer -r
  - command: systemctl is-enabled --quiet openstack-cinder-api
    ignore_errors: true
    name: Check is cinder_api is deployed
    register: cinder_api_enabled
  - command: systemctl is-enabled --quiet openstack-cinder-scheduler
    ignore_errors: true
    name: Check if cinder_scheduler is deployed
    register: cinder_scheduler_enabled
  - command: systemctl is-enabled --quiet openstack-glance-api
    ignore_errors: true
    name: Check if glance_api is deployed
    register: glance_api_enabled
  - command: systemctl is-enabled --quiet openstack-glance-registry
    ignore_errors: true
    name: Check if glance_registry is deployed
    register: glance_registry_enabled
  - command: systemctl is-enabled --quiet openstack-gnocchi-metricd
    ignore_errors: true
    name: FFU check if openstack-gnocchi-metricd is deployed
    register: gnocchi_metricd_enabled
  - command: systemctl is-enabled --quiet openstack-gnocchi-statsd
    ignore_errors: true
    name: FFU check if openstack-gnocchi-statsd is deployed
    register: gnocchi_statsd_enabled
  - ignore_errors: true
    name: Check for keystone running under apache
    register: httpd_enabled
    shell: httpd -t -D DUMP_VHOSTS | grep -q keystone_wsgi
    tags: common
  - command: systemctl is-active --quiet httpd
    ignore_errors: true
    name: Check if httpd is running
    register: httpd_running
  - command: hiera -c /etc/puppet/hiera.yaml  tripleo::keepalived::internal_api_virtual_ip
    name: get internal_api_virtual_ip
    register: internal_api_virtual_ip
    tags: common
  - command: systemctl is-enabled --quiet "{{ item }}"
    ignore_errors: true
    name: Check if swift-proxy or swift-object-expirer are deployed
    register: swift_proxy_services_enabled
    with_items:
    - openstack-swift-proxy
    - openstack-swift-object-expirer
  - command: systemctl is-enabled --quiet "{{ item }}"
    ignore_errors: true
    name: Check if swift storage services are deployed
    register: swift_services_enabled
    with_items:
    - openstack-swift-account-auditor
    - openstack-swift-account-reaper
    - openstack-swift-account-replicator
    - openstack-swift-account
    - openstack-swift-container-auditor
    - openstack-swift-container-replicator
    - openstack-swift-container-updater
    - openstack-swift-container
    - openstack-swift-object-auditor
    - openstack-swift-object-replicator
    - openstack-swift-object-updater
    - openstack-swift-object
  - command: systemctl is-enabled --quiet openstack-ceilometer-collector
    ignore_errors: true
    name: FFU check if openstack-ceilometer-collector is deployed
    register: ceilometer_agent_collector_enabled_result
    when:
    - step|int == 0
    - release == 'ocata'
  - name: Set fact ceilometer_agent_collector_enabled
    set_fact:
      ceilometer_agent_collector_enabled: '{{ ceilometer_agent_collector_enabled_result.rc
        == 0 }}'
    when:
    - step|int == 0
    - release == 'ocata'
  - command: systemctl is-enabled --quiet openstack-ceilometer-central
    ignore_errors: true
    name: FFU check if openstack-ceilometer-central is deployed
    register: ceilometer_agent_central_enabled_result
    when:
    - step|int == 0
    - release == 'ocata'
  - name: Set fact ceilometer_agent_central_enabled
    set_fact:
      ceilometer_agent_central_enabled: '{{ ceilometer_agent_central_enabled_result.rc
        == 0 }}'
    when:
    - step|int == 0
    - release == 'ocata'
  - command: systemctl is-enabled openstack-ceilometer-notification
    ignore_errors: true
    name: FFU check if openstack-ceilometer-notification is deployed
    register: ceilometer_agent_notification_enabled_result
    when:
    - step|int == 0
    - release == 'ocata'
  - name: Set fact ceilometer_agent_notification_enabled
    set_fact:
      ceilometer_agent_notification_enabled: '{{ ceilometer_agent_notification_enabled_result.rc
        == 0 }}'
    when:
    - step|int == 0
    - release == 'ocata'
  - command: systemctl is-enabled --quiet memcached
    ignore_errors: true
    name: Check if memcached is deployed
    register: memcached_enabled_result
    tags: common
    when:
    - step|int == 0
    - release == 'ocata'
  - name: memcached_enabled
    set_fact:
      memcached_enabled: '{{ memcached_enabled_result.rc == 0 }}'
    when:
    - step|int == 0
    - release == 'ocata'
  - command: systemctl is-enabled --quiet neutron-server
    ignore_errors: true
    name: Check if neutron_server is deployed
    register: neutron_server_enabled_result
    when:
    - step|int == 0
    - release == 'ocata'
  - name: Set fact neutron_server_enabled
    set_fact:
      neutron_server_enabled: '{{ neutron_server_enabled_result.rc == 0 }}'
    when:
    - step|int == 0
    - release == 'ocata'
  - command: systemctl is-enabled --quiet neutron-dhcp-agent
    ignore_errors: true
    name: Check if neutron_dhcp_agent is deployed
    register: neutron_dhcp_agent_enabled_result
    when:
    - step|int == 0
    - release == 'ocata'
  - name: Set fact neutron_dhcp_agent_enabled
    set_fact:
      neutron_dhcp_agent_enabled: '{{ neutron_dhcp_agent_enabled_result.rc == 0 }}'
    when:
    - step|int == 0
    - release == 'ocata'
  - command: systemctl is-enabled --quiet neutron-l3-agent
    ignore_errors: true
    name: Check if neutron_l3_agent is deployed
    register: neutron_l3_agent_enabled_result
    when:
    - step|int == 0
    - release == 'ocata'
  - name: Set fact neutron_l3_agent_enabled
    set_fact:
      neutron_l3_agent_enabled: '{{ neutron_l3_agent_enabled_result.rc == 0 }}'
    when:
    - step|int == 0
    - release == 'ocata'
  - command: systemctl is-enabled --quiet neutron-metadata-agent
    ignore_errors: true
    name: Check if neutron_metadata_agent is deployed
    register: neutron_metadata_agent_enabled_result
    when:
    - step|int == 0
    - release == 'ocata'
  - name: Set fact neutron_metadata_agent_enabled
    set_fact:
      neutron_metadata_agent_enabled: '{{ neutron_metadata_agent_enabled_result.rc
        == 0 }}'
    when:
    - step|int == 0
    - release == 'ocata'
  - command: systemctl is-enabled --quiet neutron-openvswitch-agent
    ignore_errors: true
    name: Check if neutron_ovs_agent is deployed
    register: neutron_ovs_agent_enabled_result
    when:
    - step|int == 0
    - release == 'ocata'
  - name: Set fact neutron_ovs_agent_enabled
    set_fact:
      neutron_ovs_agent_enabled: '{{ neutron_ovs_agent_enabled_result.rc == 0 }}'
    when:
    - step|int == 0
    - release == 'ocata'
  - command: systemctl is-enabled --quiet openstack-nova-api
    ignore_errors: true
    name: Check if nova-api is deployed
    register: nova_api_enabled_result
    when:
    - step|int == 0
    - release == 'ocata'
  - name: Set fact nova_api_enabled
    set_fact:
      nova_api_enabled: '{{ nova_api_enabled_result.rc == 0 }}'
    when:
    - step|int == 0
    - release == 'ocata'
  - command: systemctl is-enabled --quiet openstack-nova-conductor
    ignore_errors: true
    name: Check if nova_conductor is deployed
    register: nova_conductor_enabled_result
    when:
    - step|int == 0
    - release == 'ocata'
  - name: Set fact nova_conductor_enabled
    set_fact:
      nova_conductor_enabled: '{{ nova_conductor_enabled_result.rc == 0 }}'
    when:
    - step|int == 0
    - release == 'ocata'
  - command: systemctl is-active --quiet openstack-nova-consoleauth
    ignore_errors: true
    name: Check if nova_consoleauth is deployed
    register: nova_consoleauth_enabled_result
    when:
    - step|int == 0
    - release == 'ocata'
  - name: Set fact nova_consoleauth_enabled
    set_fact:
      nova_consoleauth_enabled: '{{ nova_consoleauth_enabled_result.rc == 0 }}'
    when:
    - step|int == 0
    - release == 'ocata'
  - command: systemctl is-enabled --quiet openstack-nova-api
    ignore_errors: true
    name: Check if nova_api_metadata is deployed
    register: nova_metadata_enabled_result
    tags: common
    when:
    - step|int == 0
    - release == 'ocata'
  - name: Set fact nova_metadata_enabled
    set_fact:
      nova_metadata_enabled: '{{ nova_metadata_enabled_result.rc == 0 }}'
    when:
    - step|int == 0
    - release == 'ocata'
  - command: systemctl is-enabled --quiet openstack-nova-scheduler
    ignore_errors: true
    name: Check if nova_scheduler is deployed
    register: nova_scheduler_enabled_result
    when:
    - step|int == 0
    - release == 'ocata'
  - name: Set fact nova_scheduler_enabled
    set_fact:
      nova_scheduler_enabled: '{{ nova_scheduler_enabled_result.rc == 0 }}'
    when:
    - step|int == 0
    - release == 'ocata'
  - command: systemctl is-enabled --quiet openstack-nova-novncproxy
    ignore_errors: true
    name: Check if nova vncproxy is deployed
    register: nova_vncproxy_enabled_result
    when:
    - step|int == 0
    - release == 'ocata'
  - name: Set fact nova_vncproxy_enabled
    set_fact:
      nova_vncproxy_enabled: '{{ nova_vncproxy_enabled_result.rc == 0 }}'
    when:
    - step|int == 0
    - release == 'ocata'
  - file: path=/etc/httpd/conf.d/10-ceilometer_wsgi.conf state=absent
    name: Purge Ceilometer apache config files
    when:
    - step|int == 1
    - release == 'ocata'
  - lineinfile: dest=/etc/httpd/conf/ports.conf state=absent regexp="8777$"
    name: Clean up ceilometer port from ports.conf
    when:
    - step|int == 1
    - release == 'ocata'
  - name: Stop and disable ceilometer_collector service on upgrade
    service: name=openstack-ceilometer-collector state=stopped enabled=no
    when:
    - step|int == 1
    - release == 'ocata'
    - ceilometer_agent_collector_enabled|bool
  - name: FFU stop and disable openstack-ceilometer-central service
    service: name=openstack-ceilometer-central state=stopped enabled=no
    when:
    - step|int == 1
    - release == 'ocata'
    - ceilometer_agent_central_enabled|bool
  - name: FFU stop and diable openstack-ceilometer-notification service
    service: name=openstack-ceilometer-notification state=stopped enabled=no
    when:
    - step|int == 1
    - release == 'ocata'
    - ceilometer_agent_notification_enabled|bool
  - name: Stop neutron_server
    service: name=neutron-server state=stopped enabled=no
    when:
    - step|int == 1
    - release == 'ocata'
    - neutron_server_enabled|bool
  - name: Stop neutron_l3_agent
    service: name=neutron-l3-agent state=stopped enabled=no
    when:
    - step|int == 1
    - release == 'ocata'
    - neutron_l3_agent_enabled|bool
  - name: Stop neutron_metadata_agent
    service: name=neutron-metadata-agent state=stopped enabled=no
    when:
    - step|int == 1
    - release == 'ocata'
    - neutron_metadata_agent_enabled|bool
  - name: Stop neutron_openvswitch_agent
    service: name=neutron-openvswitch-agent state=stopped enabled=no
    when:
    - step|int == 1
    - release == 'ocata'
    - neutron_ovs_agent_enabled|bool
  - name: Stop openstack-nova-api service
    service: name=openstack-nova-api state=stopped
    when:
    - step|int == 1
    - nova_api_enabled|bool
    - release == 'ocata'
  - name: Stop and disable nova_conductor service
    service: name=openstack-nova-conductor state=stopped
    when:
    - step|int == 1
    - release == 'ocata'
    - nova_conductor_enabled|bool
  - name: Stop and disable nova-consoleauth service
    service: name=openstack-nova-consoleauth state=stopped
    when:
    - step|int == 1
    - release == 'ocata'
    - nova_consoleauth_enabled|bool
  - name: Stop and disable nova_api service
    service: name=openstack-nova-api state=stopped enabled=no
    when:
    - step|int == 1
    - release == 'ocata'
    - nova_metadata_enabled|bool
  - name: Stop and disable nova-scheduler service
    service: name=openstack-nova-scheduler state=stopped
    when:
    - step|int == 1
    - release == 'ocata'
    - nova_scheduler_enabled|bool
  - name: Stop and disable nova-novncproxy service
    service: name=openstack-nova-novncproxy state=stopped
    when:
    - step|int == 1
    - release == 'ocata'
    - nova_vncproxy_enabled|bool
  - name: Stop openstack-cinder-api
    service: name=openstack-cinder-api state=stopped
    when:
    - step|int == 2
    - release == 'ocata'
    - cinder_api_enabled.rc == 0
  - name: Stop openstack-cinder-scheduler
    service: name=openstack-cinder-scheduler state=stopped enabled=no
    when:
    - step|int == 2
    - release == 'ocata'
    - cinder_scheduler_enabled.rc == 0
  - name: Stop openstack-glance-api
    service: name=openstack-glance-api state=stopped enabled=no
    when:
    - step|int == 2
    - release == 'ocata'
    - glance_api_enabled.rc == 0
  - name: Stop openstack-glance-registry
    service: name=openstack-glance-registry state=stopped enabled=no
    when:
    - step|int == 2
    - release == 'ocata'
    - glance_registry_enabled.rc == 0
  - name: Stop gnocchi (under httpd)
    service: name=httpd state=stopped
    when:
    - step|int == 2
    - release == 'ocata'
  - name: FFU stop and disable openstack-gnocchi-metricd service
    service: name=openstack-gnocchi-metricd state=stopped enabled=no
    when:
    - step|int == 2
    - release == 'ocata'
    - gnocchi_metricd_enabled.rc == 0
  - name: FFU stop and disable openstack-gnocchi-statsd service
    service: name=openstack-gnocchi-statsd state=stopped enabled=no
    when:
    - step|int == 2
    - release == 'ocata'
    - gnocchi_statsd_enabled.rc == 0
  - name: Stop and disable keystone (under httpd)
    service: name=httpd state=stopped enabled=no
    when:
    - step|int == 2
    - release == 'ocata'
    - httpd_enabled.rc == 0
    - httpd_running.rc == 0
  - name: Stop and disable memcached service
    service: name=memcached state=stopped enabled=no
    when:
    - step|int == 2
    - release == 'ocata'
    - memcached_enabled|bool
  - name: Stop neutron_dhcp_agent
    service: name=neutron-dhcp-agent state=stopped enabled=no
    when:
    - step|int == 2
    - release == 'ocata'
    - neutron_dhcp_agent_enabled|bool
  - name: Stop swift-proxy and swift-object-expirer services
    service: name={{ item.item }} state=stopped enabled=no
    when:
    - step|int == 2
    - release == 'ocata'
    - item.rc == 0
    with_items: '{{ swift_proxy_services_enabled.results }}'
  - name: Stop swift storage services
    service: name={{ item.item }} state=stopped enabled=no
    when:
    - step|int == 2
    - release == 'ocata'
    - item.rc == 0
    with_items: '{{ swift_services_enabled.results }}'
  - name: Disable all pacemaker resources except Api virtual ip, haproxy and galera
    shell: 'pcs resource show --full |\

      grep Resource |\

      grep -v galera |\

      grep -v haproxy |\

      grep -v {{internal_api_virtual_ip.stdout}} |\

      awk ''{print $2}'' |\

      xargs pcs resource disable

      '
    when:
    - step|int == 3
    - release == 'ocata'
    - is_bootstrap_node|bool
  - name: Register repo type and args
    set_fact:
      fast_forward_repo_args:
        tripleo_repos:
          ocata: -b ocata current
          pike: -b pike current
      fast_forward_repo_type: tripleo-repos
    when: step|int == 3
  - debug:
      msg: 'fast_forward_repo_type: {{ fast_forward_repo_type }} fast_forward_repo_args:
        {{ fast_forward_repo_args }}'
    when: step|int == 3
  - block:
    - git:
        dest: /home/stack/tripleo-repos/
        repo: https://github.com/openstack/tripleo-repos.git
      name: clone tripleo-repos
    - args:
        chdir: /home/stack/tripleo-repos/
      command: python setup.py install
      name: install tripleo-repos
    - command: tripleo-repos {{ fast_forward_repo_args.tripleo_repos[release] }}
      name: Enable tripleo-repos
    when:
    - step|int == 3
    - is_bootstrap_node|bool
    - fast_forward_repo_type == 'tripleo-repos'
  - command: cinder-manage db online_data_migrations
    name: Extra migration for cinder
    when:
    - step|int == 5
    - release == 'pike'
    - is_bootstrap_node|bool
  - command: nova-manage db online_data_migrations
    name: Extra migration for nova tripleo/+bug/1656791
    when:
    - step|int == 5
    - release == 'ocata'
    - is_bootstrap_node|bool
  - command: yum update -y "{{ item }}"
    name: Cinder package update
    when:
    - step|int == 6
    - is_bootstrap_node|bool
    with_items:
    - puppet-cinder
    - python2-cinderclient
    - python-cinder
    - openstack-cinder
  - loop_control:
      loop_var: package
    name: glance package update
    when:
    - step|int == 6
    - is_bootstrap_node|bool
    with_items:
    - python-glance-store
    - python-glanceclient
    - openstack-glance
    - python-glance
    yum:
      name: '{{ package }}'
      state: latest
  - loop_control:
      loop_var: package
    name: Keystone package update
    when:
    - step|int == 6
    - is_bootstrap_node|bool
    with_items:
    - openstack-keystone
    - python2-keystoneclient
    - python-keystone
    - python2-keystonemiddleware
    - python2-keystoneauth1
    yum:
      name: '{{ package }}'
      state: latest
  - name: Neutron package update
    when:
    - step|int == 6
    - is_bootstrap_node|bool
    yum: name=openstack-neutron* state=latest
  - name: Neutron package update workaround
    when:
    - step|int == 6
    - is_bootstrap_node|bool
    yum: name=python-networking-odl state=latest
  - command: yum update -y *nova*
    name: Update nova packages
    when:
    - step|int == 6
    - is_bootstrap_node|bool
  - name: Update swift storage services
    when:
    - step|int == 6
    - is_bootstrap_node|bool
    with_items:
    - openstack-swift-container
    - openstack-swift-object
    - openstack-swift-account
    yum: name={{ item }} state=latest
  - block:
    - mysql_db:
        name: nova_cell0
        state: present
      name: Create cell0 db
    - mysql_user:
        host_all: true
        name: nova
        priv: '*.*:ALL'
        state: present
      name: Grant access to cell0 db
    - copy:
        content: "$transport_url = os_transport_url({\n  'transport' => hiera('messaging_service_name',\
          \ 'rabbit'),\n  'hosts'     => any2array(hiera('rabbitmq_node_names', undef)),\n\
          \  'port'      => sprintf('%s',hiera('nova::rabbit_port', '5672') ),\n \
          \ 'username'  => hiera('nova::rabbit_userid', 'guest'),\n  'password'  =>\
          \ hiera('nova::rabbit_password'),\n  'ssl'       => sprintf('%s', bool2num(str2bool(hiera('nova::rabbit_use_ssl',\
          \ '0'))))\n}) oslo::messaging::default { 'nova_config':\n  transport_url\
          \ => $transport_url\n}\n"
        dest: /root/nova-api_upgrade_manifest.pp
        mode: 384
      name: Create puppet manifest to set transport_url in nova.conf
    - changed_when: puppet_apply_nova_api_upgrade.rc == 2
      command: puppet apply --modulepath /etc/puppet/modules:/opt/stack/puppet-modules:/usr/share/openstack-puppet/modules
        --detailed-exitcodes /root/nova-api_upgrade_manifest.pp
      failed_when: puppet_apply_nova_api_upgrade.rc not in [0,2]
      name: Run puppet apply to set tranport_url in nova.conf
      register: puppet_apply_nova_api_upgrade
    - name: Setup cell_v2 (map cell0)
      shell: nova-manage cell_v2 map_cell0 --database_connection=mysql+pymysql://nova:ePtbUHubCqvanb7c8da8AAupz@192.168.24.7/nova_cell0
    - changed_when: nova_api_create_cell.rc == 0
      failed_when: nova_api_create_cell.rc not in [0,2]
      name: Setup cell_v2 (create default cell)
      register: nova_api_create_cell
      shell: nova-manage cell_v2 create_cell --name='default' --database_connection=$(hiera
        nova::database_connection)
    - async: 300
      command: nova-manage db sync
      name: Setup cell_v2 (sync nova/cell DB)
      poll: 10
    - name: Setup cell_v2 (get cell uuid)
      register: nova_api_cell_uuid
      shell: nova-manage cell_v2 list_cells | sed -e '1,3d' -e '$d' | awk -F ' *|
        *' '$2 == "default" {print $4}'
    - command: nova-manage cell_v2 discover_hosts --cell_uuid {{nova_api_cell_uuid.stdout}}
        --verbose
      name: Setup cell_v2 (migrate hosts)
    - command: nova-manage cell_v2 map_instances --cell_uuid {{nova_api_cell_uuid.stdout}}
      name: Setup cell_v2 (migrate instances)
    when:
    - step|int == 7
    - release == 'ocata'
    - is_bootstrap_node|bool
  - command: cinder-manage db sync
    name: Cinder db sync
    when:
    - step|int == 8
    - is_bootstrap_node|bool
  - command: glance-manage db_sync
    name: glance db sync
    when:
    - step|int == 8
    - is_bootstrap_node|bool
  - command: keystone-manage db_sync
    name: keystone db sync
    when:
    - step|int == 8
    - is_bootstrap_node|bool
  - command: neutron-db-manage upgrade head
    name: Neutron db sync
    when:
    - step|int == 8
    - is_bootstrap_node|bool
  - command: nova-manage api_db sync
    name: Sync nova_api DB
    when:
    - step|int == 8
    - is_bootstrap_node|bool
  - command: nova-manage db online_data_migrations
    name: Online data migration for nova
    when:
    - step|int == 8
    - is_bootstrap_node|bool
